swagger: "2.0"
info:
  title: Skin Care Sale System API
  description: API for Skin Care Sale System
  version: 1.0.0
host: localhost:8080
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Register a new user
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              confirmPassword:
                type: string
                format: password
      responses:
        201:
          description: User created
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: object
                properties:
                  _id:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                  __v:
                    type: integer
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    msg:
                      type: string
  /auth/login:
    post:
      summary: Login to the system
      description: Login to the system
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: object
                properties:
                  _id:
                    type: string
                  email:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    msg:
                      type: string
  /auth/verify-email/{tokenVerify}/{id}:
    get:
      summary: Verify email
      description: Verify email
      parameters:
        - in: path
          name: tokenVerify
          description: Verification token
          required: true
          type: string
        - in: path
          name: id
          description: User ID
          required: true
          type: string
      responses:
        200:
          description: Email verified
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    msg:
                      type: string
  /auth/reset-password:
    post:
      summary: Send reset password email
      description: Send reset password email
      consumes:
        - application/json
      parameters:
        - in: body
          name: email
          description: User email
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
      responses:
        200:
          description: Reset password email sent
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    msg:
                      type: string
  /auth/verify-reset-password/{token}/{userId}:
    post:
      summary: Verify reset password
      description: Verify reset password
      consumes:
        - application/json
      parameters:
        - in: path
          name: token
          description: Reset token
          required: true
          type: string
        - in: path
          name: userId
          description: User ID
          required: true
          type: string
        - in: body
          name: passwords
          description: New passwords
          schema:
            type: object
            properties:
              newPassword:
                type: string
                format: password
              confirmNewPassword:
                type: string
                format: password
      responses:
        200:
          description: Password updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    msg:
                      type: string
